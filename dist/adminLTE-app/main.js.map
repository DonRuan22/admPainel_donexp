{"version":3,"sources":["./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/user/user.service.ts","./src/app/components/edit-product/edit-product.component.ts","./src/app/components/edit-product/edit-product.component.html","./src/app/services/product/product.service.ts","./src/app/components/detailed-order/detailed-order.component.ts","./src/app/components/detailed-order/detailed-order.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/services/auth_guard/auth-guard.service.ts","./src/app/app.module.ts","./src/app/services/google_drive/google-drive-service.service.ts","./src/app/components/all-products/all-products.component.ts","./src/app/components/all-products/all-products.component.html","./src/app/services/orders/orders.service.ts","./src/app/components/add-component/add-component.component.html","./src/app/components/add-component/add-component.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {UserService,ResponseModel} from '../../services/user/user.service';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  myUser:any;\n  constructor(public router: Router,\n              private userService: UserService) { }\n  \n  ngOnInit(): void {\n    this.myUser = this.userService.userData$.getValue();\n    this.myUser = this.myUser['user'];\n  }\n\n  redirectToHome() {\n    this.router.navigateByUrl('dashboard/home');\n  }\n  redirectToAbout() {\n    this.router.navigateByUrl('dashboard/about');\n  }\n  redirectToContact() {\n    this.router.navigateByUrl('dashboard/contact');\n  }\n  redirectToAllProducts() {\n    this.router.navigateByUrl('dashboard/all-products');\n  }\n  logMeOut() {\n    this.userService.logout();\n    this.router.navigateByUrl('login');\n  }\n\n\n}\n"," <!-- Navbar -->\n <nav class=\"main-header navbar navbar-expand navbar-dark\">\n    <!-- Left navbar links -->\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" data-widget=\"pushmenu\" href=\"#\" role=\"button\"><i class=\"fas fa-bars\"></i></a>\n      </li>\n      <li class=\"nav-item d-none d-sm-inline-block\">\n        <a style=\"cursor: pointer;\" (click)=\"redirectToHome()\" class=\"nav-link\">Home</a>\n      </li>\n      <li class=\"nav-item d-none d-sm-inline-block\">\n        <a style=\"cursor: pointer;\" (click)=\"redirectToContact()\" class=\"nav-link\">Contato</a>\n      </li>\n    </ul>\n\n    <!-- Right navbar links -->\n    <ul class=\"navbar-nav ml-auto\">\n      <!-- Navbar Search -->\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" data-widget=\"navbar-search\" href=\"#\" role=\"button\">\n          <i class=\"fas fa-search\"></i>\n        </a>\n        <div class=\"navbar-search-block\">\n          <form class=\"form-inline\">\n            <div class=\"input-group input-group-sm\">\n              <input class=\"form-control form-control-navbar\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n              <div class=\"input-group-append\">\n                <button class=\"btn btn-navbar\" type=\"submit\">\n                  <i class=\"fas fa-search\"></i>\n                </button>\n                <button class=\"btn btn-navbar\" type=\"button\" data-widget=\"navbar-search\">\n                  <i class=\"fas fa-times\"></i>\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </li>\n      <li class=\"nav-item d-none d-sm-inline-block\">\n        <button class=\"btn btn-navbar\" (click)=\"logMeOut()\" type=\"button\">\n          <i class='fas fa-sign-out-alt' aria-hidden=\"true\"> Log out</i>\n        </button>\n      </li>\n    </ul>\n  </nav>\n  <!-- /.navbar -->\n\n  <!-- Main Sidebar Container -->\n  <aside class=\"main-sidebar sidebar-dark-primary elevation-4\">\n    <!-- Brand Logo -->\n    <a href=\"index3.html\" class=\"brand-link\">\n      <img [src]=\"myUser.photoUrl\" alt=\"myUser.fname\" class=\"brand-image img-circle elevation-3\" style=\"opacity: .8\">\n      <span class=\"brand-text font-weight-light\">{{myUser.fname+\" \"+myUser.lname}}</span>\n    </a>\n\n    <!-- Sidebar -->\n    <div class=\"sidebar\">\n      <!-- Sidebar user panel (optional) -->\n      <div class=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n        <div class=\"image\">\n          <img [src]=\"myUser.photoUrl\" class=\"img-circle elevation-2\" alt=\"User Image\">\n        </div>\n        <div class=\"info\">\n          <a href=\"#\" class=\"d-block\">{{myUser.fname+\" \"+myUser.lname}}</a>\n        </div>\n      </div>\n\n      <!-- Sidebar Menu -->\n      <nav class=\"mt-2\">\n        <ul class=\"nav nav-pills nav-sidebar flex-column\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\n          <!-- Add icons to the links using the .nav-icon class\n               with font-awesome or any other icon font library -->\n          <li class=\"nav-item menu-open\">\n            <a href=\"dashboard/home\" class=\"nav-link active\">\n              <i class=\"nav-icon fas fa-tachometer-alt\"></i>\n              <p>\n                Dashboard\n                <i class=\"right fas fa-angle-left\"></i>\n              </p>\n            </a>\n            <ul class=\"nav nav-treeview\">\n              <li class=\"nav-item\">\n                <a style=\"cursor: pointer;\" (click)=\"redirectToHome()\" class=\"nav-link\">\n                  <i class=\"far fa-circle nav-icon\"></i>\n                  <p>Vendas</p>\n                </a>\n              </li>\n            </ul>\n          </li>\n          <li class=\"nav-item\">\n            <a href=\"dashboard/home\" class=\"nav-link\">\n              <i class=\"nav-icon fas fa-table\"></i>\n              <p>\n                Produtos\n                <i class=\"fas fa-angle-left right\"></i>\n              </p>\n            </a>\n            <ul class=\"nav nav-treeview\">\n              <li class=\"nav-item\">\n                <a style=\"cursor: pointer;\" (click)=\"redirectToAllProducts()\" class=\"nav-link\">\n                  <i class=\"far fa-circle nav-icon\"></i>\n                  <p>Tabela de Produtos</p>\n                </a>\n              </li>\n            </ul>\n          </li>\n          <li class=\"nav-item\">\n            <a href=\"dashboard/home\" class=\"nav-link\">\n            <i class=\"nav-icon fas fa-columns\"></i>\n              <p>\n                Bot\n                <i class=\"fas fa-angle-left right\"></i>\n              </p>\n            </a>\n            <ul class=\"nav nav-treeview\">\n                <li class=\"nav-item\">\n                    <a style=\"cursor: pointer;\" (click)=\"redirectToHome()\" class=\"nav-link\">\n                    <i class=\"far fa-circle nav-icon\"></i>\n                    <p>\n                        Conversas Bot\n                    </p>\n                    </a>\n                </li>\n            </ul>\n        </ul>\n      </nav>\n      <!-- /.sidebar-menu -->\n    </div>\n    <!-- /.sidebar -->\n  </aside>\n   <!-- Content Wrapper. Contains page content -->\n   <div class=\"content-wrapper\">\n    <!-- Content Header (Page header) -->\n\n  <router-outlet></router-outlet>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  SERVER_URL : 'https://shopdex-edml6m2f3a-uc.a.run.app/api',\n  SERVER_URL_NEW : 'https://shopdex-edml6m2f3a-uc.a.run.app/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {ProductService} from '../../services/product/product.service';\nimport {Subscription} from 'rxjs';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EditProductComponent } from '../edit-product/edit-product.component';\nimport { AddComponent } from '../add-component/add-component.component';\nimport { OrdersService } from 'src/app/services/orders/orders.service';\nimport { DetailedOrderComponent } from '../detailed-order/detailed-order.component';\nimport {SocialAuthService,SocialUser} from 'angularx-social-login';\nimport {UserService,ResponseModel} from '../../services/user/user.service';\nimport {map} from 'rxjs/operators';\n/**\n * @title Data table with sorting, pagination, and filtering.\n */\ndeclare var $: any;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\n\nexport class HomeComponent implements OnInit, OnDestroy {\n  orders: any[] = [];\n  orders_table: any[] = [];\n  subs: Subscription[] = [];\n  errorMessage: string;\n  hasError = false;\n  success = false;\n  myUser:any;\n\n  constructor(private ordersService: OrdersService, \n              private userService: UserService, \n              public dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.hasError = false;\n    var user = this.userService.userData$.getValue();\n    var userId:any;\n    console.log(user);\n    if(user){\n      if('user' in user){userId = user['user']['id'];}\n      else if('id' in user){userId = user['id'];}\n    }\n\n    this.subs.push(this.ordersService.getAllOrdersShop(userId).subscribe((orders: any) => {\n      this.orders = orders;\n      console.log(this.orders);\n      if(this.orders.length >0){\n        this.orders_table = this.orders.filter((v,i,a)=>a.findIndex(t=>(t.id === v.id))===i);\n          \n        console.log(this.orders_table);\n      }\n    }));\n  }\n\n  ngOnDestroy(): void {\n    this.subs.map(s => s.unsubscribe());\n  }\n\n  openDetailedForm(id: number):void {\n    var order: any[] =[];\n    order = this.orders.filter(x => x.id == id);\n    this.dialog.open(DetailedOrderComponent, {width: '500px', height: '530px', data:  order});\n  }\n\n  getPrice(id: number):number{\n    var order: any[] =[];\n    var price:number = 0;\n    order = this.orders.filter(x => x.id == id);\n    for (var o of order) {\n      price = price+o.price;\n    }\n    return price;\n  }\n\n\n  \n \n}\n","<div class=\"container my-5\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"alert alert-danger\" [hidden]=\"!hasError\">\n          {{ errorMessage }}\n        </div>\n        <div class=\"alert alert-success\" [hidden]=\"!success\">\n          {{ errorMessage }}\n        </div>\n      </div>\n      <div class=\"col\">\n        <table class=\"table table-bordered\">\n          <thead class=\"bg-dark text-light\">\n          <tr>\n            <th width=\"20%\">Id Compra</th>\n            <th>Cliente</th>\n            <th>Valor</th>\n            <th>Status</th>\n            <th>Detalhes</th>\n          </tr>\n          </thead>\n  \n          <tbody>\n          <tr *ngFor=\"let o of orders_table\">\n            <td>{{ o.id }}</td>\n            <td>{{ o.fname+\" \"+ o.lname}}</td>\n            <td>{{ getPrice(o.id) }}</td>\n            <td *ngIf=\"o.status == 0\">\n              <span class=\"badge badge-warning\" >Aguardando Pagamento</span> \n            </td> \n            <td *ngIf=\"o.status == 1\">\n              <span class=\"badge badge-success\" >Aguardando Entrega</span> \n            </td> \n            <td *ngIf=\"o.status == 2\">\n              <span class=\"badge badge-danger\" >Entregue</span> \n            </td> \n            <td>\n              <div class=\"btn-toolbar\">\n                <button class=\"btn btn-sm btn-primary mr-3\" (click) = \"openDetailedForm(o.id)\" >Detalhes da compra</button>\n              </div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  ","import {Injectable} from '@angular/core';\nimport {SocialAuthService, GoogleLoginProvider, SocialUser} from 'angularx-social-login';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  auth = false;\n  private SERVER_URL = environment.SERVER_URL;\n  private user;\n  authState$ = new BehaviorSubject<boolean>(this.auth);\n  userData$ = new BehaviorSubject<SocialUser | ResponseModel |object| null>(null);\n  loginMessage$ = new BehaviorSubject<string|null>(null);\n  userRole: number;\n\n  constructor(private authService: SocialAuthService,\n              private httpClient: HttpClient) {\n    this.userData$ = new BehaviorSubject<SocialUser | ResponseModel |object|null>(JSON.parse(localStorage.getItem('user')|| '{}'));\n    if(localStorage.getItem('user')){\n      this.authState$.next(true);\n    }\n    authService.authState.subscribe((user: SocialUser) => {\n      if (user != null) {\n        this.httpClient.get<any>(`${this.SERVER_URL}/users/validate/${user.email}`).subscribe((res: { status: boolean, user: object }) => {\n          //  No user exists in database with Social Login\n          if (!res.status) {\n            // Send data to backend to register the user in database so that the user can place orders against his user id\n            this.registerUser({\n              email: user.email,\n              fname: user.firstName,\n              lname: user.lastName,\n              password: 1234 \n            }, user.photoUrl, 'social').subscribe(response => {\n              if (response.message === 'Registration successful') {\n                this.auth = true;\n                this.userRole = 555;\n                this.authState$.next(this.auth);\n                localStorage.setItem('user', JSON.stringify(user));\n                this.userData$.next(user);\n              }\n            });\n\n          } else {\n            this.auth = true;\n            // @ts-ignore\n            this.userRole = res.user.role;\n            localStorage.setItem('user', JSON.stringify(res.user));\n            this.authState$.next(this.auth);\n            this.userData$.next(res.user);\n          }\n        });\n\n      }\n    });\n  }\n\n  //  Login User with Email and Password\n  loginUser(email: string, password: string) {\n\n    this.httpClient.post<ResponseModel>(`${this.SERVER_URL}/auth/login`, {email, password})\n      .pipe(catchError((err: HttpErrorResponse) => of(err.error.message)))\n      .subscribe((data: ResponseModel) => {\n        if (typeof (data) === 'string') {\n          this.loginMessage$.next(data);\n        } else {\n          this.auth = data.auth;\n          this.userRole = data.role;\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          localStorage.setItem('user', JSON.stringify(data));\n          this.authState$.next(this.auth);\n          this.userData$.next(data);\n        }\n      });\n\n  }\n\n//  Google Authentication\n  googleLogin() {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n\n  logout() {\n    this.authService.signOut();\n    this.auth = false;\n    // remove user from local storage and set current user to null\n    localStorage.removeItem('user');\n    this.authState$.next(this.auth);\n  }\n\n  registerUser(formData: any, photoUrl?: string, typeOfUser?: string): Observable<{ message: string }> {\n    const {fname, lname, email, password} = formData;\n    console.log(formData);\n    return this.httpClient.post<{ message: string }>(`${this.SERVER_URL}/auth/register`, {\n      email,\n      lname,\n      fname,\n      typeOfUser,\n      password,\n      photoUrl: photoUrl || null\n    });\n  }\n\n\n}\n\n\nexport interface ResponseModel {\n  token: string;\n  auth: boolean;\n  email: string;\n  username: string;\n  fname: string;\n  lname: string;\n  photoUrl: string;\n  userId: number;\n  type: string;\n  role: number;\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {GoogleDrivePickerService} from '../../services/google_drive/google-drive-service.service';\nimport {Product} from '../../shared/product';\nimport {ProductService} from '../../services/product/product.service';\n\ndeclare var gapi: any;\ndeclare var google: any;\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.scss']\n})\nexport class EditProductComponent implements OnInit {\n\n  product: Product = {_id: '', title: '', image: '', description: '', price: '', quantity: '',short_description: '', cat_id: ''};\n  //product = {title: '', image: '', description: '', price: '', quantity: '',short_description: '', cat_id: 0};\n  developerKey = 'AIzaSyDVeNZcaQhGGEcq64Ig9YKs5MGyQFDKUdc';\n  clientId = \"898420138508-180vnahbosbt013ljeph3frrheg9h8j5.apps.googleusercontent.com\";\n  scope = ['https://www.googleapis.com/auth/drive.file'];//insert scope here\n  \n  public pickerApiLoaded = false;\n  private oauthToken=null;\n  public appId = 'shopdon-1614963409256';  \n\n  constructor(public dialogRef: MatDialogRef<EditProductComponent>, \n            private googleDrivePickerService: GoogleDrivePickerService,\n            private productService: ProductService,\n            @Inject(MAT_DIALOG_DATA) public data: {id_product: string}) { }\n\n\n  ngOnInit() {\n    this.product._id = this.data.id_product;\n  }\n \n\n  onSubmit() {\n    console.log('User: ', this.product);\n    this.dialogRef.close();\n    this.productService.editProduct(this.product._id,this.product).subscribe((response: { message: string }) => {\n       console.log(response.message);\n    });\n  }\n\n\n loadGoogleDrive(): void {\n    this.googleDrivePickerService.open((data) => {\n      if (data[google.picker.Response.ACTION] == google.picker.Action.PICKED) {\n        let doc = data[google.picker.Response.DOCUMENTS][0];\n        this.product.image = 'https://drive.google.com/thumbnail?id='+ doc[google.picker.Document.ID];\n        //console.log(this.product.image);\n      }\n    });\n  }\n \n}\n  \n\n","<form novalidate #editProductForm=\"ngForm\" class=\"form-edit\" (ngSubmit)=\"onSubmit()\">\n    <h1 mat-dialog-title>Editar Produto</h1>\n    <mat-dialog-content>\n      <p>\n        <mat-form-field>\n          <input matInput placeholder=\"Title\" type=\"text\" [(ngModel)]=\"product.title\" name=\"title\" #title=\"ngModel\" required>\n          <mat-error *ngIf=\"title.errors?.required\">Title is required</mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <button mat-raised-button type=\"button\" color=\"warn\" (click)=\"loadGoogleDrive()\">\n          <mdb-icon fab icon=\"google-drive\"></mdb-icon>\n          Choose a photo from Google drive\n        </button>\n          \n      </p>\n      <p>\n        <mat-form-field style=\"width: 300px;\">\n          <textarea matInput\n              cdkTextareaAutosize\n              cdkAutosizeMinRows=\"1\"\n              cdkAutosizeMaxRows=\"5\"\n              [(ngModel)]=\"product.description\" \n              name=\"description\" \n              #description=\"ngModel\"\n              placeholder=\"Description\"\n              required></textarea>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field>\n          <input matInput placeholder=\"Descricao curta\" type=\"text\" [(ngModel)]=\"product.short_description\" name=\"short_description\" #short_description=\"ngModel\" required>\n          <mat-error *ngIf=\"short_description.errors?.required\">Descrição curta is required</mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field>\n          <input matInput placeholder=\"Price\" type=\"text\" [(ngModel)]=\"product.price\" name=\"price\" #price=\"ngModel\" required>\n          <mat-error *ngIf=\"price.errors?.required\">Price is required</mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field>\n          <input matInput placeholder=\"Quantity\" type=\"text\" [(ngModel)]=\"product.quantity\" name=\"quantity\" #quantity=\"ngModel\" required>\n          <mat-error *ngIf=\"quantity.errors?.required\">Quantity is required</mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Categorie</mat-label>\n          <select matNativeControl [(ngModel)]=\"product.cat_id\" name=\"categorie\" #categorie=\"ngModel\" required >\n            <mat-error *ngIf=\"categorie.errors?.required\">Categorie is required</mat-error>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n          </select>\n        </mat-form-field>\n      </p>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n      <p>\n        <button mat-raised-button mat-dialog-close color=\"warn\">Cancelar</button>\n        <button type=\"submit\" mat-raised-button  color=\"primary\" (ngSubmit)=\"onSubmit()\" class=\"background-primary text-floral-white\" [disabled]=\"editProductForm.form.invalid\">Editar Produto</button>\n      </p>\n    </mat-dialog-actions>\n  </form>\n  \n  \n  \n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\nimport { Product } from '../../shared/product';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private SERVER_URL = environment.SERVER_URL;\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  getAllProducts(): Observable<any[]> {\n    \n    return this.httpClient.get<any[]>(`${this.SERVER_URL}/products`);\n  }\n\n  getAllProductsUser(userId): Observable<any[]> {\n    \n    return this.httpClient.get<any[]>(`${this.SERVER_URL}/products/shop/${userId}`);\n  }\n\n  deleteProduct(productId): Observable<any> {\n    return this.httpClient.delete<{ message?: string, status: string }>(`${this.SERVER_URL}/products/delete/${productId}`)\n      .pipe(\n        switchMap(async (data) => {\n          const prods = await this.getAllProducts().toPromise();\n          return {\n            ...data,\n            ...prods\n          };\n        })\n      );\n  }\n\n  editProduct(productId, product: Product): Observable<any> {\n    let id = product._id;\n    let title = product.title;\n    let image = product.image;\n    let description = product.description;\n    let quantity = product.quantity;\n    let price = product.price;\n    let short_description = product.short_description;\n    let cat_id = product.cat_id;\n\n    const prod_set = { id, title, image, description, quantity, price, short_description, cat_id};\n\n    return this.httpClient.patch<{ message?: string, status: string }>(`${this.SERVER_URL}/products/update/${productId}`, prod_set)\n      .pipe(\n        switchMap(async (data) => {\n          const prods = await this.getAllProducts().toPromise();\n          return {\n            ...data,\n            ...prods\n          };\n        })\n      );\n  }\n\n  addProduct(product: Product,userId): Observable<any> {\n    let title = product.title;\n    let image = product.image;\n    let description = product.description;\n    let quantity = product.quantity;\n    let price = product.price;\n    let short_description = product.short_description;\n    let cat_id = product.cat_id;\n    \n    const prod_set = { title, image, description, quantity, price, short_description, cat_id, userId};\n    return this.httpClient.post<{ message?: string, status: string }>(`${this.SERVER_URL}/products/add`, prod_set)\n      .pipe(\n        switchMap(async (data) => {\n          const prods = await this.getAllProductsUser(userId).toPromise();\n          return {\n            ...data,\n            ...prods\n          };\n        })\n      );\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {GoogleDrivePickerService} from '../../services/google_drive/google-drive-service.service';\nimport {Product} from '../../shared/product';\nimport {Order} from '../../shared/order';\nimport {ProductService} from '../../services/product/product.service';\n\n@Component({\n  selector: 'app-detailed-order',\n  templateUrl: './detailed-order.component.html',\n  styleUrls: ['./detailed-order.component.scss']\n})\nexport class DetailedOrderComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<DetailedOrderComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any[]) { }\n\n  ngOnInit(): void {\n    console.log(this.data);\n  }\n\n}\n","<h1 mat-dialog-title>Detalhamento de compra ID - {{ data[0].id }}</h1>\n<div mat-dialog-content >\n    <div *ngFor=\"let d of data\" class=\"form-detail\">\n        <h2 class=\"title-3\">Produto</h2>\n        <div class=\"content-2\">{{ d.title }}</div>\n        <h2 class=\"title-2\">Descrição do produto</h2>\n        <div class=\"content-2\">{{ d.description }}</div>\n        <h2 class=\"title-2\">Quantidade de produto - {{ d.quantity }}</h2>\n        <h2 class=\"title-2\">Preço: R${{ d.price }}</h2>\n        <hr>\n    </div>\n    <h2 class=\"title-2\">Comprador: {{ data[0].fname }} {{ data[0].lname }}</h2>\n    <h2 class=\"title-2\">{{ data[0].email }}</h2>  \n    <h2 class=\"title-2\">{{ data[0].line2 }}</h2>  \n    <h2 class=\"title-2\">{{ data[0].state }}</h2> \n    <h2 class=\"title-2\">{{ data[0].phone }}</h2>   \n</div>\n\n\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'adminLTE-app';\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SocialAuthService,SocialUser} from 'angularx-social-login';\nimport {UserService,ResponseModel} from '../../services/user/user.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n  loginMessage: string;\n  userRole: number;\n\n  constructor(private authService: SocialAuthService,\n              private router: Router,\n              private userService: UserService,\n              private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.userService.authState$.subscribe(authState => {\n      if (authState) {\n        this.router.navigateByUrl(this.route.snapshot.queryParams.returnUrl || 'dashboard/home');\n      } else {\n        this.router.navigateByUrl('/login');\n      }\n    });\n    \n  }\n\n\n  signInWithGoogle() {\n    this.userService.googleLogin();\n  }\n\n  login(form: NgForm) {\n    const email = this.email;\n    const password = this.password;\n\n    if (form.invalid) {\n      return;\n    }\n\n    form.reset();\n    this.userService.loginUser(email, password);\n\n    this.userService.loginMessage$.subscribe(msg => {\n      if (msg != null){\n        this.loginMessage = msg;\n      }\n      setTimeout(() => {\n        this.loginMessage = '';\n      }, 2000);\n    });\n\n\n  }\n}\n","<div class=\"row\" style=\"margin-left: 400px; margin-top: 100px;\">\n    <div class=\"col-md-6\">\n        <div class=\"card card-primary\">\n            <div class=\"card-header\">\n            <h3 class=\"card-title\">Login</h3>\n            </div>\n            <!-- /.card-header -->\n            <!-- form start -->\n            <form novalidate #myform=\"ngForm\">\n            <div class=\"card-body\">\n                <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">Email</label>\n                <input class=\"form-control\" id=\"email\" type=\"email\" [(ngModel)]=\"email\" name=\"email\" required>\n                </div>\n                <div class=\"form-group\">\n                <label for=\"exampleInputPassword1\">Senha</label>\n                <input class=\"form-control\" id=\"password\" type=\"password\" [(ngModel)]=\"password\" name=\"password\" required>\n                </div>\n                <div class=\"form-group\">\n                <button (click)=\"signInWithGoogle()\" class=\"btn btn-danger btn-sm btn-block mt-4\"><span><i\n                    class=\"fa fa-google\"></i> Google </span>\n                </button>\n                </div>\n            </div>\n            <!-- /.card-body -->\n            \n            <div class=\"card-footer\">\n                <button class=\"btn btn-primary btn-sm btn-block\" (click)=\"login(myform)\" [disabled]=\"myform.invalid && myform.touched\">Submit</button>\n            </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"col-md-6\">\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport {UserService,ResponseModel} from '../../services/user/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n  constructor(private router: Router,\n    private userService: UserService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const user = this.userService.authState$.getValue();\n    if (user) {\n        // authorised so return true\n        console.log(\"Logado\");\n        console.log(user);\n        return true;\n    }\n    console.log(\"N Logado\");\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { AllProductsComponent } from './components/all-products/all-products.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EditProductComponent } from './components/edit-product/edit-product.component';\nimport { AddComponent } from './components/add-component/add-component.component';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';  \nimport { FormsModule } from '@angular/forms'; \nimport {MatIconModule} from '@angular/material/icon';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport {MatButtonModule} from '@angular/material/button';\nimport { DetailedOrderComponent } from './components/detailed-order/detailed-order.component';\nimport {SocialAuthServiceConfig, GoogleLoginProvider, SocialLoginModule} from 'angularx-social-login';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HeaderComponent,\n    HomeComponent,\n    AboutComponent,\n    AllProductsComponent,\n    EditProductComponent,\n    AddComponent,\n    DetailedOrderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatToolbarModule,\n    MatFormFieldModule, \n    MatInputModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MDBBootstrapModule,\n    FormsModule,\n    MatButtonModule,\n    MatPaginatorModule,\n    HttpClientModule,\n    MatTableModule,\n    SocialLoginModule\n  ],\n  providers: [\n    {\n    provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '898420138508-ljocqjeec7lu9gq0jk36ggc7hb2qc7fa.apps.googleusercontent.com'\n            )\n          }\n        ]\n      } as SocialAuthServiceConfig,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\n\ndeclare const gapi: any;\ndeclare const google: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleDrivePickerService {\n\n  private clientId = \"898420138508-180vnahbosbt013ljeph3frrheg9h8j5.apps.googleusercontent.com\";\n  private apiKey = 'AIzaSyDVeNZcaQhGGEcq64Ig9YKs5MGyQFDKUdc';\n  private appId = 'shopdon-1614963409256';  \n  private scope= ['https://www.googleapis.com/auth/drive.file'];//insert scope here\n\n  private oauthAccessToken = null;\n  private pickerApiLoaded = false;\n  private pickerCallback = null;\n\n  public open(callback): void {\n    this.pickerCallback = callback;\n    this.oauthAccessToken = null;\n    gapi.load('auth', {'callback': this.onAuthApiLoad.bind(this)});\n    gapi.load('picker', {'callback': this.onPickerApiLoad.bind(this)});\n  }\n\n  private onAuthApiLoad(): void {\n    gapi.auth.authorize({\n      'client_id': this.clientId,\n      'scope': this.scope,\n      'immediate': false,\n    }, this.handleAuthResult.bind(this));\n  }\n\n  private onPickerApiLoad(): void {\n    this.pickerApiLoaded = true;\n    this.createPicker();\n  }\n\n  private handleAuthResult(authResult): void {\n    console.log(authResult);\n    if (authResult && !authResult.error) {\n      this.oauthAccessToken = authResult.access_token;\n      console.log(\"chega\");\n      this.createPicker();\n    }\n  }\n\n  private createPicker(): void {\n    if (this.pickerApiLoaded && this.oauthAccessToken) {\n      console.log(\"chega1\");\n      let view = new google.picker.View(google.picker.ViewId.DOCS);\n      view.setMimeTypes(\"image/png,image/jpeg,image/jpg\");\n      let picker = new google.picker.PickerBuilder()\n        .enableFeature(google.picker.Feature.NAV_HIDDEN)\n        .enableFeature(google.picker.Feature.MULTISELECT_ENABLED)\n        .setAppId(this.appId)\n        .setOAuthToken(this.oauthAccessToken)\n        .addView(view)\n        .addView(new google.picker.DocsUploadView())\n        .setDeveloperKey(this.apiKey)\n        .setCallback(this.pickerCallback)\n        .build();\n      picker.setVisible(true);\n    }\n  }\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {ProductService} from '../../services/product/product.service';\nimport {Subscription} from 'rxjs';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { EditProductComponent } from '../edit-product/edit-product.component';\nimport { AddComponent } from '../add-component/add-component.component';\nimport {UserService,ResponseModel} from '../../services/user/user.service';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-all-products',\n  templateUrl: './all-products.component.html',\n  styleUrls: ['./all-products.component.scss']\n})\nexport class AllProductsComponent implements OnInit, OnDestroy {\n  products: any[] = [];\n  subs: Subscription[] = [];\n  errorMessage: string;\n  hasError = false;\n  success = false;\n  userId:any;\n\n  constructor(private productService: ProductService,\n              private userService: UserService, \n              public dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.hasError = false;\n    var user = this.userService.userData$.getValue();\n    var userId:any;\n    if(user){\n      if('user' in user){userId = user['user']['id'];}\n      else if('id' in user){userId = user['id'];}\n    }\n    this.userId = userId;\n    this.subs.push(this.productService.getAllProductsUser(userId).subscribe((prods: any) => {\n      this.products = prods.products;\n      // console.log(this.products);\n    }));\n  }\n\n  ngOnDestroy(): void {\n    this.subs.map(s => s.unsubscribe());\n  }\n\n  deleteProduct(id: number): void {\n    this.subs.push(this.productService.deleteProduct(id).subscribe(\n      res => {\n        if (res.status === 'failure') {\n          this.hasError = true;\n          this.errorMessage = res.message;\n          console.log(this.errorMessage)\n        }\n\n        if (res.status === 'success') {\n          this.success = true;\n          this.errorMessage = res.message;\n        }\n\n        this.products = res.products;\n        console.log(this.products);\n        $('.alert').delay(1000).slideUp(1500);\n      }\n    ));\n  }\n\n  openEditForm(id: number):void {\n    this.dialog.open(EditProductComponent, {width: '500px', height: '450px', data: { id_product: id },});\n    this.dialog.afterAllClosed.subscribe((error:any) => { \n      this.subs.push(this.productService.getAllProductsUser(this.userId).subscribe((prods: any) => {\n        if(!error){\n          this.products = prods.products;\n          this.success = true;\n          this.errorMessage = \"Produto editado com sucesso\";\n          $('.alert').delay(1000).slideUp(1500);\n        }\n        else{\n          this.hasError = true;\n          this.errorMessage = \"Erro\";\n          $('.alert').delay(1000).slideUp(1500);\n        }\n      }));\n     } );\n  }\n\n  openAddForm():void {\n    this.dialog.open(AddComponent, {width: '500px', height: '450px'});\n    this.dialog.afterAllClosed.subscribe((error:any) => { \n      this.subs.push(this.productService.getAllProductsUser(this.userId).subscribe((prods: any) => {\n        if(!error){\n          this.products = prods.products;\n          this.success = true;\n          this.errorMessage = \"Produto adicionado com sucesso\";\n          $('.alert').delay(1000).slideUp(1500);\n        }\n        else{\n          this.hasError = true;\n          this.errorMessage = \"Erro\";\n          $('.alert').delay(1000).slideUp(1500);\n        }\n      }));\n     } );\n  }\n\n  \n \n}\n","<div class=\"container my-5\">\n    <div class=\"col-12 text-right mb-3\">\n      <button mat-raised-button class=\"material-cust-medium-button\"type=\"button\" color=\"accent\" (click)=\"openAddForm()\">Adicionar Produto</button>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"alert alert-danger\" [hidden]=\"!hasError\">\n          {{ errorMessage }}\n        </div>\n        <div class=\"alert alert-success\" [hidden]=\"!success\">\n          {{ errorMessage }}\n        </div>\n      </div>\n      <div class=\"col\">\n        <table class=\"table table-bordered\">\n          <thead class=\"bg-dark text-light\">\n          <tr>\n            <th width=\"20%\">Name</th>\n            <th width=\"40%\">Description</th>\n            <th>Price</th>\n            <th>Category</th>\n            <th>Operation</th>\n          </tr>\n          </thead>\n  \n          <tbody>\n          <tr *ngFor=\"let p of products\">\n            <td>{{ p.title[1] }}</td>\n            <td>{{ p.description }}</td>\n            <td>{{ p.price | currency:'INR' }}</td>\n            <td>{{ p.title[0] }}</td>\n            <td>\n              <div class=\"btn-toolbar\">\n                <button class=\"btn btn-sm btn-danger mr-3\" (click)=\"deleteProduct(p.id)\">Delete</button>\n                <button class=\"btn btn-sm btn-primary mr-3\" (click)=\"openEditForm(p.id)\">Editar</button>\n              </div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  ","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\nimport { Product } from '../../shared/product';\nimport {environment} from '../../../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  private SERVER_URL = environment.SERVER_URL;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllOrders(): Observable<any[]> {\n    return this.httpClient.get<any[]>(`${this.SERVER_URL}/orders`);\n  }\n\n  getAllOrdersShop(userId): Observable<any[]> {\n    return this.httpClient.get<any[]>(`${this.SERVER_URL}/orders/shop/${userId}`);\n  }\n\n  editProduct(productId, product: Product): Observable<any> {\n    let id = product._id;\n    let title = product.title;\n    let image = product.image;\n    let description = product.description;\n    let quantity = product.quantity;\n    let price = product.price;\n    let short_description = product.short_description;\n    let cat_id = product.cat_id;\n\n    const prod_set = { id, title, image, description, quantity, price, short_description, cat_id};\n\n    return this.httpClient.patch<{ message?: string, status: string }>(`${this.SERVER_URL}/products/update/${productId}`, prod_set)\n      .pipe(\n        switchMap(async (data) => {\n          const prods = await this.getAllOrders().toPromise();\n          return {\n            ...data,\n            ...prods\n          };\n        })\n      );\n  }\n\n  addProduct(product: Product): Observable<any> {\n    let title = product.title;\n    let image = product.image;\n    let description = product.description;\n    let quantity = product.quantity;\n    let price = product.price;\n    let short_description = product.short_description;\n    let cat_id = product.cat_id;\n\n    const prod_set = { title, image, description, quantity, price, short_description, cat_id};\n    return this.httpClient.post<{ message?: string, status: string }>(`${this.SERVER_URL}/products/add`, prod_set)\n      .pipe(\n        switchMap(async (data) => {\n          const prods = await this.getAllOrders().toPromise();\n          return {\n            ...data,\n            ...prods\n          };\n        })\n      );\n  }\n}\n","<form novalidate #editProductForm=\"ngForm\" class=\"form-edit\" (ngSubmit)=\"onSubmit()\">\n    <h1 mat-dialog-title>Adicionar Produto</h1>\n    <mat-dialog-content>\n      <p>\n        <mat-form-field>\n          <input matInput placeholder=\"Title\" type=\"text\" [(ngModel)]=\"product.title\" name=\"title\" #title=\"ngModel\" required>\n          <mat-error *ngIf=\"title.errors?.required\">Title is required</mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <button mat-raised-button type=\"button\" color=\"warn\" (click)=\"loadGoogleDrive()\">\n          <mdb-icon fab icon=\"google-drive\"></mdb-icon>\n          Choose a photo from Google drive\n        </button>\n          \n      </p>\n      <p>\n        <mat-form-field style=\"width: 300px;\">\n          <textarea matInput\n              cdkTextareaAutosize\n              cdkAutosizeMinRows=\"1\"\n              cdkAutosizeMaxRows=\"5\"\n              [(ngModel)]=\"product.description\" \n              name=\"description\" \n              #description=\"ngModel\"\n              placeholder=\"Description\"\n              required></textarea>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field>\n          <input matInput placeholder=\"Descricao curta\" type=\"text\" [(ngModel)]=\"product.short_description\" name=\"short_description\" #short_description=\"ngModel\" required>\n          <mat-error *ngIf=\"short_description.errors?.required\">Descrição curta is required</mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field>\n          <input matInput placeholder=\"Price\" type=\"text\" [(ngModel)]=\"product.price\" name=\"price\" #price=\"ngModel\" required>\n          <mat-error *ngIf=\"price.errors?.required\">Price is required</mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field>\n          <input matInput placeholder=\"Quantity\" type=\"text\" [(ngModel)]=\"product.quantity\" name=\"quantity\" #quantity=\"ngModel\" required>\n          <mat-error *ngIf=\"quantity.errors?.required\">Quantity is required</mat-error>\n        </mat-form-field>\n      </p>\n      <p>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Categorie</mat-label>\n          <select matNativeControl [(ngModel)]=\"product.cat_id\" name=\"categorie\" #categorie=\"ngModel\" required >\n            <mat-error *ngIf=\"categorie.errors?.required\">Categorie is required</mat-error>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n          </select>\n        </mat-form-field>\n      </p>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n      <p>\n        <button mat-raised-button mat-dialog-close color=\"warn\">Cancelar</button>\n        <button type=\"submit\" mat-raised-button color=\"primary\" (ngSubmit)=\"onSubmit()\" class=\"background-primary text-floral-white\" [disabled]=\"editProductForm.form.invalid\">Editar Produto</button>\n      </p>\n    </mat-dialog-actions>\n</form>\n  \n  \n\n","import { Component, OnInit } from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport {GoogleDrivePickerService} from '../../services/google_drive/google-drive-service.service';\nimport {Product} from '../../shared/product';\nimport {ProductService} from '../../services/product/product.service';\nimport {UserService,ResponseModel} from '../../services/user/user.service';\n\ndeclare var gapi: any;\ndeclare var google: any;\n\n@Component({\n  selector: 'app-add-component',\n  templateUrl: './add-component.component.html',\n  styleUrls: ['./add-component.component.scss']\n})\nexport class AddComponent implements OnInit {\n\n  product: Product = {_id: '', title: '', image: '', description: '', price: '', quantity: '',short_description: '', cat_id: ''};\n  developerKey = 'AIzaSyDVeNZcaQhGGEcq64Ig9YKs5MGyQFDKUdc';\n  clientId = \"898420138508-180vnahbosbt013ljeph3frrheg9h8j5.apps.googleusercontent.com\";\n  scope = ['https://www.googleapis.com/auth/drive.file'];//insert scope here\n  \n  public pickerApiLoaded = false;\n  private oauthToken=null;\n  public appId = 'shopdon-1614963409256'; \n  private userId:any; \n\n  constructor(public dialogRef: MatDialogRef<AddComponent>, \n            private googleDrivePickerService: GoogleDrivePickerService,\n            private productService: ProductService,\n            private userService: UserService\n            ) { }\n\n\n  ngOnInit() {\n    var user = this.userService.userData$.getValue();\n    if(user){\n      if('user' in user){this.userId = user['user']['id'];}\n      else if('id' in user){this.userId = user['id'];}\n    }\n    \n  }\n \n\n  onSubmit() {\n    console.log('User: ', this.product);\n    this.dialogRef.close();\n    this.productService.addProduct(this.product,this.userId).subscribe((response: { message: string }) => {\n       console.log(response.message);\n    });\n  }\n\n\n loadGoogleDrive(): void {\n    this.googleDrivePickerService.open((data) => {\n      if (data[google.picker.Response.ACTION] == google.picker.Action.PICKED) {\n        let doc = data[google.picker.Response.DOCUMENTS][0];\n        this.product.image = 'https://drive.google.com/thumbnail?id='+ doc[google.picker.Document.ID];\n        console.log(this.product.image);\n      }\n    });\n  }\n \n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { AllProductsComponent } from './components/all-products/all-products.component';\nimport { AuthGuardService } from './services/auth_guard/auth-guard.service';\n\n\nconst routes: Routes = [\n  {\n    path: 'dashboard', component: HeaderComponent, canActivate: [AuthGuardService],\n    children: [\n      { path: 'home', component: HomeComponent, canActivate: [AuthGuardService] },\n      { path: 'about', component: AboutComponent, canActivate: [AuthGuardService] },\n      { path: 'all-products', component: AllProductsComponent, canActivate: [AuthGuardService] },\n    ]\n  },\n  { path: 'login', component: LoginComponent },\n  { path: '**', redirectTo: '/login', pathMatch: 'full' }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}